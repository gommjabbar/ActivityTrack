@model ActivityTrack.Models.Activity

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" ng-controller="newActivityController">
        <h4 id="h4">Activity</h4>

        <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" ng-model="activity.StartDate" />        
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                <input type="date" ng-model=" activity.enddate" />
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.ActivityDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                <input type="text" ng-model="activity.description" />
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>*@
            <select ng-model="activity.project"
                    ng-options="project.name for project in allProjects track by project.id"></select>
            <input type="button" id="btnShowNewProject" value="{{newProjectButtonText}}" ng-click="showHide()" />
            <div ng-show="showNewProject">
                <input type="text" ng-model="newProject.name"/>
                <input type="button" id="btnSaveNewProject" value="Save" ng-click="saveProject()" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    var app = angular.module("activityTrack");
    app.service("projectService", function () {
        return {
            addNewProject: function (project) {
                return $.ajax(
                {
                    url: '/Project/Add',
                    type: 'post',
                    data: project
                });
            }
        }
    });

    app.controller("newActivityController", //['projectService',
        function ($scope,projectService) {
        $scope.newProjectButtonText = 'Add';
        $scope.showNewProject = false;
        $scope.newProject = {
            id: -1,
            name: 'Change the name'
        }
        $scope.allProjects = [
            { id: 1, name: "ActivityTrack"},
            { id: 2, name: "Other" },
        ]
        $scope.activity = @Html.Raw(Json.Encode(Model))
        $scope.activity = {
            project: $scope.allProjects[0]
        }
        $scope.saveProject = function () {
            var data = JSON.stringify($scope.newProject);
            $.ajax(
            {
                url: '/api/project/add',
                type: 'post',
                data: { name: 'a', id: 1 }
            }).done(function (data) {

                $scope.allProjects.push(data);
                $scope.$apply();
            })

        }
        $scope.showHide = function () {
            $scope.showNewProject = !$scope.showNewProject;
            if ($scope.showNewProject) {
                $scope.newProjectButtonText = 'Cancel';
            }
            else {
                $scope.newProjectButtonText = 'Add';
            }
        }
        //}]);
    });



    var shown = false;
    $('#newProjectDiv').hide();
    function showNewProject() {
        if (shown) {
            $('#newProjectDiv').hide();
            $('#btnShowNewProject').val('Show');
            shown = false;
        }
        else {
            $('#newProjectDiv').show();
            $('#btnShowNewProject').val('Hide');
            shown = true;
        }
    }
    function saveProject() {
        var projectName = $('#projectName').val();
        $.ajax(
            {
                url: '/Project/Add',
                type: 'post',
                data: {
                    name: projectName
                }
            })
            .done(function (data) {
                alert(data.id)
            })
            .error(function (e) {
                alert('error');
            })
    }
    //var test = {};
    //test.f = function () { alert(); }
    //test.f();
    //test["f"]();
    //test.f = 123;

    $(function () {

        $('#StartDate').datetimepicker();
    });
</script>
}

@model ActivityTrack.Models.Activity

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" ng-controller="newActivityController">
        <h4 id="h4">Activity</h4>

        <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="datepicker" ng-model="activity.StartDate" style="width: 160px" />        
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                <input type="text" id="datepicker1" ng-model=" activity.EndDate" style="width: 160px" />
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.ActivityDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                <input type="text" ng-model="activity.description" style="width: 160px;"  />
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.ProjectId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>*@

            <select ng-model="activity.project"
                    ng-options="project.name for project in allProjects track by project.id" style="width: 160px; height: 25px; margin-left: 15px;"></select>            
            <input class="btn btn-default" type="button" id="btnShowNewProject" value="{{newProjectButtonText}}" ng-click="showHide()" /> 
                <div ng-show="showNewProject"> 
                    <input type="text" ng-model="newProject.name" style="width: 160px; margin-left:210px"/>
                    <input class="btn btn-default" type="button" id="btnSaveNewProject" value="Save" ng-click="saveProject()" />
                </div>                
            </div>



        @*<div ng-controller="myCtrl">

            <div style="float:left;">
                <label style="margin-left:90px; margin-right:30px" for="fileToUpload">Upload File </label>
            </div>
            <div style="margin-left: auto  ">
                <input type="file" file-model="myFile" />
                <input class="btn btn-default" type="button" ng-click="uploadFile()" value="Upload" />
            </div>

        </div>*@


    <div class="form-group">
            <div class="col-md-offset-2 col-md-10">           
                <input type="button" class="btn btn-default" value="Create" ng-click="addActivity()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

   
    //var myApp = angular.module('myApp', []);

    //myApp.directive('fileModel', ['$parse', function ($parse) {
    //    return {
    //        restrict: 'A',
    //        link: function (scope, element, attrs) {
    //            var model = $parse(attrs.fileModel);
    //            var modelSetter = model.assign;

    //            element.bind('change', function () {
    //                scope.$apply(function () {
    //                    modelSetter(scope, element[0].files[0]);
    //                });
    //            });
    //        }
    //    };
    //}]);

    //myApp.service('fileUpload', ['$http', function ($http) {
    //    this.uploadFileToUrl = function (file, uploadUrl) {
    //        var fd = new FormData();
    //        fd.append('file', file);
    //        $http.post(uploadUrl, fd, {
    //            transformRequest: angular.identity,
    //            headers: { 'Content-Type': undefined }
    //        })
    //        .success(function () {
    //        })
    //        .error(function () {
    //        });
    //    }
    //}]);

    //myApp.controller('myCtrl', ['$scope', 'fileUpload', function ($scope, fileUpload) {

    //    $scope.uploadFile = function () {
    //        var file = $scope.myFile;
    //        console.log('file is ' + JSON.stringify(file));
    //        var uploadUrl = "/fileUpload";
    //        fileUpload.uploadFileToUrl(file, uploadUrl);
    //    };

    //}]);


    @*var app = angular.module("activityTrack");

    app.service("projectService", function () {
        return {
            addNewProject: function (project) {
                return $.ajax(
                {
                    url: '/Projects/Add',
                    type: 'post',
                    data: project
                });
            }
        }
    });

    app.controller("newActivityController", //['projectService',

         function ($scope, projectService) {
             //function ($scope, $http) {
             $scope.newProjectButtonText = 'Add';
             $scope.showNewProject = false;
             $scope.newProject = {
                 id: -1,
                 name: 'Enter project'
             }
             $scope.allProjects = [
                 { id: 1, name: "ActivityTrack" },
                 { id: 2, name: "Other" },
                 { id: 3, name: "NextOne" }
             ]
             $scope.activity = @Html.Raw(Json.Encode(Model))
             $scope.activity = {
                 project: $scope.allProjects[0]
             }

             $scope.saveProject = function () {
                 var data = JSON.stringify($scope.newProject);
                 $.ajax(
                 {
                     url: '/api/projects/add',
                     type: 'post',
                     data: { Name: 'a', Id: 1 }
                 }).done(function (data) {
                     $scope.allProjects.push(data);
                     $scope.$apply();
                 })
             }

             $scope.addActivity = function () {
                 //var data = { startdate: activity.startdate, enddate: activity.enddate, description: activity.description, project: activity.project }
                 $.ajax(
                 {
                     url: '/api/activities/Add',
                     type: 'post',
                     data: {
                         startdate: 'asdas',
                         enddate: 'asdas',
                         description: 'sdfsfd',
                         project: 'asdas',
                         //startdate: activity.startdate,
                         //enddate: activity.enddate,
                         //description: activity.description,
                         //project: activity.project
                     }
                 }).done(function (data) {
                     $scope.activity.push(data);
                     $scope.$apply();
                 })
             }


             $scope.showHide = function () {
                 $scope.showNewProject = !$scope.showNewProject;
                 if ($scope.showNewProject) {
                     $scope.newProjectButtonText = 'Cancel';
                 }
                 else {
                     $scope.newProjectButtonText = 'Add';
                 }
             }
             // }]);
         });*@

  
    $(function () {
        $('#datepicker').datetimepicker();
    });

    $(function () {
        $('#datepicker1').datetimepicker();
    });
    

</script>
}
